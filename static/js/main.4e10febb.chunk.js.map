{"version":3,"sources":["firebase/config.js","firebase/useFirestore.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","messagingSenderId","appId","measurementId","myFirestore","firestore","useFirestore","collectionName","useState","docs","setDocs","useEffect","unsubscribe","collection","onSnapshot","snap","newDocs","forEach","doc","push","data","id","App","modules","groups","group","setGroup","modulesGroup","setModulesGroup","viewer","setViewer","setEditor","className","style","background","Dropdown","Toggle","variant","name","Menu","sort","a","b","x","toLowerCase","y","map","Item","onClick","filter","module","handleSelectGroup","types","type","content","title","value","onChange","e","target","placeholder","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAYEA,IAASC,cAVU,CACjBC,OAAQC,0CACRC,WAAYD,oCACZE,UAAWF,oBACXG,kBAAmBH,eACnBI,MAAOJ,4CACPK,cAAeL,iBAMjB,IAAMM,EAAcT,IAASU,YCXlBC,EAAe,SAACC,GAAoB,IAAD,EACnBC,mBAAS,IADU,mBACrCC,EADqC,KAC9BC,EAD8B,KAc5C,OAZAC,qBAAU,WACN,IAAMC,EAAcR,EAAYS,WAAWN,GACtCO,YAAW,SAACC,GACT,IAAIC,EAAU,GACdD,EAAKE,SAAQ,SAAAC,GACTF,EAAQG,KAAR,2BAAiBD,EAAIE,QAArB,IAA6BC,GAAIH,EAAIG,SAEzCX,EAAQM,MAEhB,OAAO,kBAAMJ,OACd,CAACL,IAEGE,GCuEIa,MAjFf,WACE,IAAMC,EAAUjB,EAAa,mCACvBkB,EAASlB,EAAa,kCAFf,EAIaE,mBAAS,MAJtB,mBAINiB,EAJM,KAICC,EAJD,OAK2BlB,mBAAS,MALpC,mBAKNmB,EALM,KAKQC,EALR,OAOepB,mBAAS,IAPxB,mBAONqB,EAPM,KAOEC,EAPF,OAQetB,mBAAS,IARxB,mBAQEuB,GARF,WAwBb,OACE,qBAAKV,GAAG,MAAMW,UAAU,MAAMC,MAAO,CAAEC,WAAW,QAAD,OAAUpC,iBAAV,wCAAjD,SACE,sBAAKuB,GAAG,oBAAoBW,UAAU,sBAAtC,UACE,sBAAKX,GAAG,mBAAmBW,UAAU,QAArC,UACE,qBAAKA,UAAU,YAAf,SACE,6CAGDR,GACC,eAACW,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,QAAQhB,GAAG,gBAApC,SACGI,EAAQA,EAAMa,KAAO,iBAExB,cAACH,EAAA,EAASI,KAAV,UACGf,EAAOgB,MAAK,SAACC,EAAGC,GACf,IAAIC,EAAIF,EAAEH,KAAKM,cACXC,EAAIH,EAAEJ,KAAKM,cACf,OAAID,EAAIE,GAAa,EACjBF,EAAIE,EAAY,EACb,KACNC,KAAI,SAAArB,GACL,OACE,cAACU,EAAA,EAASY,KAAV,CAAe1B,GAAII,EAAMa,KAAMU,QAAS,kBA5BhC,SAACvB,GACzBC,EAASD,GACTG,EAAgBL,EAAQ0B,QAAO,SAACC,GAAD,OAAYA,EAAOzB,QAAUA,EAAMa,SA0BJa,CAAkB1B,IAAhE,SAAyEA,EAAMa,eAOxFX,GAAgBF,GACfA,EAAM2B,MAAMZ,OAAOM,KAAI,SAACO,GACtB,OACE,eAAClB,EAAA,EAAD,CAAUd,GAAIgC,EAAMrB,UAAU,oBAA9B,UACE,cAACG,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAzB,SAAiCgB,IACjC,cAAClB,EAAA,EAASI,KAAV,UACGZ,GAAgBA,EAAasB,QAAO,SAACC,GAAD,OAAYA,EAAOG,OAASA,KAAMP,KAAI,SAAAI,GACzE,OACE,cAACf,EAAA,EAASY,KAAV,CAAe1B,GAAI6B,EAAO7B,GAAI2B,QAAS,kBAAMlB,EAAUoB,EAAOI,UAA9D,SAAyEJ,EAAOK,sBAShG,sBAAKlC,GAAG,oBAAoBW,UAAU,QAAtC,UACE,0BAAUX,GAAG,SAASmC,MAAO3B,EAAQ4B,SA7DxB,SAACC,GACA,WAAhBA,EAAEC,OAAOtC,GACXS,EAAU4B,EAAEC,OAAOH,OAEnBzB,EAAU2B,EAAEC,OAAOH,QAyD8CI,YAAY,WACzE,cAAC,kBAAD,CAAiBvC,GAAG,cAAcW,UAAU,2BAA2B6B,KAAMhC,EAA7E,SAAqF,4DC3E/FiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4e10febb.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASURMENT_ID\r\n  }\r\n  \r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const myFirestore = firebase.firestore();\r\n\r\n  export { myFirestore };","import { useState , useEffect } from 'react'\r\nimport { myFirestore } from '../firebase/config.js'\r\n\r\nexport const useFirestore = (collectionName) => {\r\n    const [docs , setDocs] = useState([]);\r\n    useEffect(()=>{\r\n        const unsubscribe = myFirestore.collection(collectionName)\r\n            .onSnapshot((snap)=>{\r\n                let newDocs = [];\r\n                snap.forEach(doc=>{\r\n                    newDocs.push({...doc.data(), id: doc.id})\r\n                })\r\n                setDocs(newDocs);\r\n            })\r\n        return () => unsubscribe();\r\n    }, [collectionName]);\r\n\r\n    return docs;\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { Dropdown } from 'react-bootstrap'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useState } from 'react';\nimport { useFirestore } from './firebase/useFirestore';\n\nfunction App() {\n  const modules = useFirestore('moduloose/moduloose-WFM/modules'); //Array of all modules\n  const groups = useFirestore('moduloose/moduloose-WFM/groups'); //Array of all groups\n\n  const [group, setGroup] = useState(null);\n  const [modulesGroup, setModulesGroup] = useState(null);\n\n  const [viewer, setViewer] = useState(\"\");\n  const [editor, setEditor] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.id === \"viewer\") {\n      setViewer(e.target.value);\n    } else {\n      setEditor(e.target.value);\n    }\n  }\n\n  const handleSelectGroup = (group) => {\n    setGroup(group);\n    setModulesGroup(modules.filter((module) => module.group === group.name));\n  }\n\n  //RENDER USER PAGE\n  return (\n    <div id=\"app\" className=\"App\" style={{ background: `url('${process.env.PUBLIC_URL}/images/background-light-grey.png')` }}>\n      <div id=\"content-container\" className=\"row container-fluid\">\n        <div id=\"selector-wrapper\" className=\"col-5\">\n          <div className=\"title-div\">\n            <h1>Moduloose</h1>\n          </div>\n          {/*RENDER GROUP DROPDOWN*/}\n          {groups &&\n            <Dropdown>\n              <Dropdown.Toggle variant=\"light\" id=\"main-dropdown\">\n                {group ? group.name : \"Select Group\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {groups.sort((a, b) => {\n                  var x = a.name.toLowerCase();\n                  var y = b.name.toLowerCase();\n                  if (x < y) { return -1; }\n                  if (x > y) { return 1; }\n                  return 0;\n                }).map(group => {\n                  return (\n                    <Dropdown.Item id={group.name} onClick={() => handleSelectGroup(group)}>{group.name}</Dropdown.Item>\n                  );\n                })}\n              </Dropdown.Menu>\n            </Dropdown>\n          }\n          {/*RENDER TYPE DROPDOWNS*/}\n          {modulesGroup && group &&\n            group.types.sort().map((type) => {\n              return (\n                <Dropdown id={type} className=\"selector-dropdown\">\n                  <Dropdown.Toggle variant=\"dark\">{type}</Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {modulesGroup && modulesGroup.filter((module) => module.type === type).map(module => {\n                      return (\n                        <Dropdown.Item id={module.id} onClick={() => setViewer(module.content)}>{module.title}</Dropdown.Item>\n                      )\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              )\n            })}\n        </div>\n        {/*RENDER WORKSPACE*/}\n        <div id=\"workspace-wrapper\" className=\"col-7\">\n          <textarea id=\"viewer\" value={viewer} onChange={handleChange} placeholder=\"Viewer\"></textarea>\n          <CopyToClipboard id=\"copy-viewer\" className=\"btn btn-dark copy-button\" text={viewer}><button>Copy Viewer</button></CopyToClipboard>\n\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}